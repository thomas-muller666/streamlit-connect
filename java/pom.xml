<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.streamlitconnect</groupId>
  <artifactId>streamlit-connect</artifactId>
  <version>0.1.${revision}</version>
  <packaging>jar</packaging>

  <name>StreamlitConnect</name>
  <url>https://streamlit-connect.io</url>

  <properties>
    <java.version>21</java.version>
    <maven.version>[3.9,)</maven.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <skipTests>true</skipTests>
    <owasp.skip>true</owasp.skip>

    <revision>SNAPSHOT</revision>

    <!-- Protoc -->
    <protoc.version>4.27.3</protoc.version>
    <grpc-java.version>1.66.0</grpc-java.version>
    <protoc.path>${user.home}/.protoc/</protoc.path>
    <protobuf.repo>https://github.com/protocolbuffers/protobuf/releases/download</protobuf.repo>
    <grpc-java.repo>https://repo1.maven.org/maven2/io/grpc/protoc-gen-grpc-java</grpc-java.repo>

    <!-- Library versions -->
    <lombok.version>1.18.34</lombok.version>
    <awaitility.version>4.2.1</awaitility.version>
    <commons.lang3.version>3.16.0</commons.lang3.version>
    <commons-exec.version>1.4.0</commons-exec.version>
    <commons-io.version>2.16.1</commons-io.version>
    <commons-compress.version>1.26.1</commons-compress.version>
    <junit.version>5.10.1</junit.version>
    <slf4j.version>2.0.13</slf4j.version>
    <logback.version>1.5.6</logback.version>
    <junit.version>5.11.0</junit.version>

    <!-- Maven/groovy versions -->
    <groovy.version>4.0.22</groovy.version>
    <maven.version>3.9.8</maven.version>
    <maven-model.version>3.9.8</maven-model.version>
    <maven-model-builder.version>3.9.8</maven-model-builder.version>
    <plexus-utils.version>4.0.1</plexus-utils.version>
    <maven-shared-utils.version>3.4.2</maven-shared-utils.version>

    <!-- Plugin versions -->
    <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
    <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
    <maven-javadoc-plugin.version>3.8.0</maven-javadoc-plugin.version>
    <build-helper-maven-plugin.version>3.6.0</build-helper-maven-plugin.version>
    <exec-maven-plugin.version>3.4.1</exec-maven-plugin.version>
    <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
    <maven-surefire-report-plugin.version>3.3.1</maven-surefire-report-plugin.version>
    <maven-surefire-plugin.version>3.3.1</maven-surefire-plugin.version>
    <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
    <versions-maven-plugin.version>2.17.1</versions-maven-plugin.version>
    <maven-dependency-plugin.version>3.7.1</maven-dependency-plugin.version>
    <dependency-check-maven.version>10.0.3</dependency-check-maven.version>
    <gmavenplus-plugin.version>3.0.2</gmavenplus-plugin.version>
    <protoc-jar-maven-plugin.version>3.11.4</protoc-jar-maven-plugin.version>

  </properties>

  <dependencies>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>1.3.2</version>
    </dependency>

    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>${protoc.version}</version>
    </dependency>

    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-protobuf</artifactId>
      <version>${grpc-java.version}</version>
    </dependency>

    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-stub</artifactId>
      <version>${grpc-java.version}</version>
    </dependency>

    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-netty-shaded</artifactId>
      <version>${grpc-java.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons.lang3.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/commons-validator/commons-validator -->
    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <version>1.9.0</version>
    </dependency>

    <!-- Test dependencies -->

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <version>24.1.0</version>
      <scope>compile</scope>
    </dependency>

  </dependencies>

  <build>

    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${exec-maven-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven-antrun-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build-helper-maven-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven-dependency-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>${dependency-check-maven.version}</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>${maven-surefire-report-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.gmavenplus</groupId>
          <artifactId>gmavenplus-plugin</artifactId>
          <version>${gmavenplus-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>com.github.os72</groupId>
          <artifactId>protoc-jar-maven-plugin</artifactId>
          <version>${protoc-jar-maven-plugin.version}</version>
        </plugin>

      </plugins>

    </pluginManagement>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <release>${java.version}</release>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>

          <!-- First execution: exclude the entire package -->
          <execution>
            <id>exclude-package</id>
            <goals>
              <goal>javadoc</goal>
            </goals>
            <configuration>
              <source>${java.version}</source>
              <detectLinks>true</detectLinks>
              <doclint>none</doclint>
              <excludePackageNames>io.streamlitconnect.server.*</excludePackageNames>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <plugin>
        <groupId>com.github.os72</groupId>
        <artifactId>protoc-jar-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <protocArtifact>com.google.protobuf:protoc:${protoc.version}</protocArtifact>
              <inputDirectories>
                <include>${project.basedir}/../proto</include>
              </inputDirectories>
              <outputTargets>
                <outputTarget>
                  <type>java</type>
                  <outputDirectory>${project.build.directory}/generated-sources</outputDirectory>
                </outputTarget>
                <outputTarget>
                  <type>grpc-java</type>
                  <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc-java.version}</pluginArtifact>
                  <outputDirectory>${project.build.directory}/generated-sources</outputDirectory>
                </outputTarget>
              </outputTargets>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>proto</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.basedir}/target/generated-sources</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>META-INF/lib/</classpathPrefix>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
            <manifestEntries>
              <Project-Name>${project.name}</Project-Name>
              <Project-Description>${project.description}</Project-Description>
              <Project-Version>${project.version}</Project-Version>
              <Project-GroupId>${project.groupId}</Project-GroupId>
              <Project-Build-FinalName>${project.build.finalName}</Project-Build-FinalName>
              <Build-Time>${maven.build.timestamp}</Build-Time>
              <Built-By>${user.name}</Built-By>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>

        <dependencies>

          <dependency>
            <groupId>org.apache.groovy</groupId>
            <artifactId>groovy</artifactId>
            <version>${groovy.version}</version>
            <scope>runtime</scope>
          </dependency>

          <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-model</artifactId>
            <version>${maven-model.version}</version>
          </dependency>

          <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-model-builder</artifactId>
            <version>${maven-model-builder.version}</version>
          </dependency>

          <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-utils</artifactId>
            <version>${plexus-utils.version}</version>
          </dependency>

          <dependency>
            <groupId>org.apache.maven.shared</groupId>
            <artifactId>maven-shared-utils</artifactId>
            <version>${maven-shared-utils.version}</version>
          </dependency>

        </dependencies>

        <executions>

          <execution>
            <!--
            <id>generate-release-pom</id>
            <phase>generate-resources</phase>
            -->
            <goals>
              <goal>execute</goal>
            </goals>
          </execution>
        </executions>

        <configuration>
          <scripts>
            <script>
              <![CDATA[
                import org.apache.maven.model.io.xpp3.MavenXpp3Reader
                import org.apache.maven.model.io.xpp3.MavenXpp3Writer
                import org.apache.maven.model.Model
                import org.apache.maven.model.Dependency

                def pomFile = new File("pom.xml")

                def reader = new FileReader(pomFile)
                def mavenReader = new MavenXpp3Reader()
                def model = mavenReader.read(reader)
                reader.close()

                def revision = System.properties['revision']
                if (!revision) {
                    throw new IllegalStateException("Please specify the revision using '-Drevision'")
                }

                println "Creating release pom.xml with revision: $revision"

                // Interpolate model version
                String newVersion = "${model.version.replace('${revision}', revision)}"

                println "version interpolated: $newVersion"

                // Create a new minimal model
                def newModel = new Model()
                newModel.modelVersion = '4.0.0'
                newModel.groupId = model.groupId
                newModel.artifactId = model.artifactId
                newModel.version = newVersion

                // Add only compile, runtime, or no-scope dependencies
                List<Dependency> dependencies = model.dependencies.findAll { dep ->
                    dep.scope in ['compile', 'runtime', null]
                }.collect { dep ->
                    // Interpolate version for each dependency
                    String version
                    if (dep.version.contains('${') && dep.version.contains('}')) {
                        String versionKey = dep.version.replaceAll(/[\$\{\}]/, '')
                        // use resolution from model.properties first, then try System.properties
                        version = model.properties.getProperty(versionKey) ?: System.properties[versionKey] ?: dep.version
                    } else {
                        version = dep.version
                    }
                    new Dependency(groupId: dep.groupId, artifactId: dep.artifactId, version: version, scope: dep.scope)
                }
                newModel.dependencies.addAll(dependencies)

                def writer = new MavenXpp3Writer()
                writer.write(new FileWriter("./target/pom.xml"), newModel)
             ]]>
            </script>
          </scripts>
        </configuration>

      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <configuration>
          <skip>${owasp.skip}</skip>
          <!-- <failBuildOnCVSS>7.0</failBuildOnCVSS> -->
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <executions>

          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <fail>false</fail>
              <rules>

                <requireMavenVersion>
                  <version>${maven.version}</version>
                </requireMavenVersion>

                <requireJavaVersion>
                  <version>${java.version}</version>
                </requireJavaVersion>

                <DependencyConvergence/>

              </rules>
            </configuration>
          </execution>

          <execution>
            <id>enforce-banned-dependencies</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <fail>false</fail>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <exclude>commons-logging:commons-logging</exclude>
                    <exclude>log4j:log4j</exclude>
                    <exclude>org.apache.logging.log4j:log4j-core</exclude>
                  </excludes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>

        </executions>
      </plugin>

    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>

</project>
